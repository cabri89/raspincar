{% extends '@App/base.html.twig' %}

{% block body %}
<h3>{{car}}</h3>
<a class="modal-trigger waves-effect waves-light btn" href="#updateCar">Modifier la voiture</a>
<!-- Modal Structure -->
<div id="updateCar" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4>Modifier la voiture</h4>
        {{ form_start(carForm) }}
        {{ form_widget(carForm) }}
        {{ form_end(carForm) }}
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat ">Fermer</a>
    </div>
</div>

<h4>Carnet d'entretien</h4>
<table>
    <thead>
        <tr>
            <th>Description</th>
            <th>Date</th>
            <th>Kilomètres du véhicule</th>
            <th>Date de la notif</th>
            <th>Kilomètres de la notif</th>
            <th>Prix de la maintenance</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        {% set _token = csrf_token('DELETE_MAINTENANCE_TOKEN') %}
        {% for maintenance in car.maintenances %}
        <tr>
            <td>{{maintenance.type}}</td>
            <td>{{maintenance.dateMaintenance|date("m/d/Y")}}</td>
            <td>{{maintenance.kilometres}}</td>
            <td>{{maintenance.dateNotif|date("m/d/Y")}}</td>
            <td>{{maintenance.kilometresNotif}}</td>
            <td>{{maintenance.prix}}</td>
            <td>
                <a href="{{ path('app_account_maintenancedelete',{id : maintenance.id, idCar : car.id, _token : _token}) }}" class="">
                    <span>Supprimer</span>
                </a>
            </td>
        </tr>
        {% endfor %}
    </tbody>
</table>
<a class="modal-trigger waves-effect waves-light btn" href="#addMaintenance">Ajouter un entretien</a>


<!-- Modal Structure -->
<div id="addMaintenance" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4>Ajout d'un entretien</h4>
        {{ form_start(maintenanceForm) }}
        {{ form_widget(maintenanceForm) }}
        {{ form_widget(maintenanceForm.save) }}
        {{ form_end(maintenanceForm) }}
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat ">Fermer</a>
    </div>
</div>
<div class="row">
    <h4 id="titleTrajet">Géolocalisation</h4>
     <div class="col s12" id="map" style="height:250px;"></div>
     <div class="col s12"><canvas id="myChart"></canvas></div>
     <!-- <div class="col s6"><canvas id="myChart1"></canvas></div> -->
   </div>
   <script>
    var raspData = [{"lat":48.896343,"lon":2.154412,"temp":20},{"lat":48.897443,"lon":2.154412,"temp":24},{"lat":48.897543,"lon":2.154412,"temp":26},{"lat":48.896643,"lon":2.158412,"temp":21},{"lat":48.899743,"lon":2.154412,"temp":34}];
    var temperature = [];
    var labels = [];
    for (var i = 0; i < raspData.length; i++) {
        temperature[i] = raspData[i].temp;
        labels[i] = "";
    }
    var ctx = document.getElementById("myChart");
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            /*        labels: ["", "", "", "", "", ""],*/
            labels: labels,
            datasets: [{
                label: 'Température (C°)',
                data: temperature,
                backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });

    var coord = [];
    for (var i = 0; i < raspData.length; i++) {
        coord[i] = {};
        coord[i].lat = raspData[i].lat;
        coord[i].lng = raspData[i].lon;
    }

    function initMap() {
        google.maps.LatLng.prototype.kmTo = function(a){ 
            var e = Math, ra = e.PI/180; 
            var b = this.lat() * ra, c = a.lat() * ra, d = b - c; 
            var g = this.lng() * ra - a.lng() * ra; 
            var f = 2 * e.asin(e.sqrt(e.pow(e.sin(d/2), 2) + e.cos(b) * e.cos 
                (c) * e.pow(e.sin(g/2), 2))); 
            return f * 6378.137; 
        }

        google.maps.Polyline.prototype.inKm = function(n){ 
            var a = this.getPath(n), len = a.getLength(), dist = 0; 
            for (var i=0; i < len-1; i++) { 
               dist += a.getAt(i).kmTo(a.getAt(i+1)); 
           }
           return dist; 
       }
       var title = document.getElementById("titleTrajet");
       var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 14,
          center: coord[0],
          mapTypeId: 'roadmap'
      });


       var flightPath = new google.maps.Polyline({
          path: coord,
          geodesic: true,
          strokeColor: '#FF0000',
          strokeOpacity: 1.0,
          strokeWeight: 2
      });
      var distance = flightPath.inKm()
      title.innerText = "Dernier trajet (" + distance.toFixed(3) + "km)";
       flightPath.setMap(map);
   }
</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAui7r1lhPpk5Jc1nG4-59Kw1U5X2rdkkY&callback=initMap">
</script>
<script type="text/javascript">
$(document).ready(function(){
    $('.modal').modal();
});
</script>
{% endblock %}
